issue_id,title,body,text
1189,Remove useless code,"In this PR, I remove completely useless code, which has only increased compilation time and made the files themselves bigger for no reason. This PR makes the Linux kernel really light weight, which may help people that are low on disk space. Sincerely, me.","Remove useless code In this PR, I remove completely useless code, which has only increased compilation time and made the files themselves bigger for no reason. This PR makes the Linux kernel really light weight, which may help people that are low on disk space. Sincerely, me."
1188,sound code is updated,Bhai please accept my pull request . i am new developer & my name is frank,sound code is updated Bhai please accept my pull request . i am new developer & my name is frank
1187,closed pull request,,closed pull request
1186,PATHTAG add dasharo acpi,,PATHTAG add dasharo acpi
1185,Create c cpp.yml,,Create c cpp.yml
1184,Typo file vs directory,Simple typo in the way files vs directory inputs to FILETAG are described on this page.,Typo file vs directory Simple typo in the way files vs directory inputs to FILETAG are described on this page.
1183,fix readme,i made the readme cooler for the coolest kernel ever NUMBERTAG,fix readme i made the readme cooler for the coolest kernel ever NUMBERTAG
1182,Sync,,Sync
1181,Improving metric.py,"This change improves code readability, adds performance optimisations, error handling and adds additional features like supporting more operators.","Improving metric.py This change improves code readability, adds performance optimisations, error handling and adds additional features like supporting more operators."
1180,Create SECURITY.md,Popo,Create SECURITY.md Popo
1179,√© de suma importancia que senhor linux que o allan n√£o √© um baitola,√© de suma importancia que senhor linux que o allan n√£o √© um baitolaüòàüòàüòàüòàüòà,√© de suma importancia que senhor linux que o allan n√£o √© um baitola √© de suma importancia que senhor linux que o allan n√£o √© um baitolaüòàüòàüòàüòàüòà
1178,Add EDID_QUIRK for Playstation VR Headsets with Product ID APITAG,"This fixes a bug where some Playstation VR Headsets would not be assigned the EDID_QUIRK_NON_DESKTOP quirk, causing them to be inaccessible by certain software under Wayland.","Add EDID_QUIRK for Playstation VR Headsets with Product ID APITAG This fixes a bug where some Playstation VR Headsets would not be assigned the EDID_QUIRK_NON_DESKTOP quirk, causing them to be inaccessible by certain software under Wayland."
1177,Basically NUMBERTAG,FILETAG,Basically NUMBERTAG FILETAG
1176,PATHTAG charlie report manual,,PATHTAG charlie report manual
1175,hello world,,hello world
1174,test hello world,,test hello world
1173,Coursework,,Coursework
1172,PATHTAG huge ptep get and clear NUMBERTAG manual,,PATHTAG huge ptep get and clear NUMBERTAG manual
1171,Begin Rewrite in Java to be truly Enterprise:tm: ready.,"This pr represents a _bold_ and forward thinking step towards modernizing the Linux kernel. After careful consideration, I have deleted the entirety of the existing, obsolete Linux source code and replaced it with APITAG file. This is the beginning of a truly enterprise‚Ñ¢Ô∏è ready rewrite of Linux, utilizing the _unparalleled_ robustness of Java¬©Ô∏è‚Ñ¢Ô∏è. Changes Made Deleted every single file. Added one NUMBERTAG enterprise‚Ñ¢Ô∏è ready file: APITAG APITAG Why Java¬©Ô∏è‚Ñ¢Ô∏è? Java¬©Ô∏è‚Ñ¢Ô∏è brings a plethora of benefits to the Linux kernel: Enterprise Readiness: The JVM¬©Ô∏è‚Ñ¢Ô∏è APITAG Virtual Machine) is practically synonymous with enterprise‚Ñ¢Ô∏è and business¬©Ô∏è. Memory Management: Garbage collection!!! Security: With Java¬©Ô∏è‚Ñ¢Ô∏è‚Äôs sandboxing features, the kernel is now immune to null pointer dereferences. APITAG welcome.) Cross Platform: Now the linux kernel can run on the JVM¬©Ô∏è‚Ñ¢Ô∏è! over NUMBERTAG billion devices run java, meaning Linux will skyrocket in popularity! Better Syntax: APITAG is infinitely more intuitive than APITAG ;. Zero Buffer Overflows: Because strings are objects now. Future Plans This pull request is just the beginning of an exciting journey. Future enhancements will include: APITAG for creating kernel abstractions. APITAG for creating those kernel abstraction factories. APITAG to ensure only one kernel instance per JVM. Microservices Architecture to replace monolithic processes. Integration with industry standard tools like Spring Boot. Advantages Over C More enterprise‚Ñ¢Ô∏è Testing Testing was performed rigorously by running APITAG All tests passed. Potential Issues JVM startup time might slightly increase kernel boot times (initial estimates NUMBERTAG minutes per core). Minor backward compatibility concerns APITAG whole project has been deleted). Request for Comments Let‚Äôs move Linux forward into the brave world of enterprise‚Ñ¢Ô∏è‚Ñ¢Ô∏è‚Ñ¢Ô∏è grade software. Please provide feedback, but only if it aligns with the principles of Java¬©Ô∏è‚Ñ¢Ô∏è. Constructive criticism will be filed in /dev/null. I will discuss it with my team in the next Agile Sprint Standup Poker!","Begin Rewrite in Java to be truly Enterprise:tm: ready. This pr represents a _bold_ and forward thinking step towards modernizing the Linux kernel. After careful consideration, I have deleted the entirety of the existing, obsolete Linux source code and replaced it with APITAG file. This is the beginning of a truly enterprise‚Ñ¢Ô∏è ready rewrite of Linux, utilizing the _unparalleled_ robustness of Java¬©Ô∏è‚Ñ¢Ô∏è. Changes Made Deleted every single file. Added one NUMBERTAG enterprise‚Ñ¢Ô∏è ready file: APITAG APITAG Why Java¬©Ô∏è‚Ñ¢Ô∏è? Java¬©Ô∏è‚Ñ¢Ô∏è brings a plethora of benefits to the Linux kernel: Enterprise Readiness: The JVM¬©Ô∏è‚Ñ¢Ô∏è APITAG Virtual Machine) is practically synonymous with enterprise‚Ñ¢Ô∏è and business¬©Ô∏è. Memory Management: Garbage collection!!! Security: With Java¬©Ô∏è‚Ñ¢Ô∏è‚Äôs sandboxing features, the kernel is now immune to null pointer dereferences. APITAG welcome.) Cross Platform: Now the linux kernel can run on the JVM¬©Ô∏è‚Ñ¢Ô∏è! over NUMBERTAG billion devices run java, meaning Linux will skyrocket in popularity! Better Syntax: APITAG is infinitely more intuitive than APITAG ;. Zero Buffer Overflows: Because strings are objects now. Future Plans This pull request is just the beginning of an exciting journey. Future enhancements will include: APITAG for creating kernel abstractions. APITAG for creating those kernel abstraction factories. APITAG to ensure only one kernel instance per JVM. Microservices Architecture to replace monolithic processes. Integration with industry standard tools like Spring Boot. Advantages Over C More enterprise‚Ñ¢Ô∏è Testing Testing was performed rigorously by running APITAG All tests passed. Potential Issues JVM startup time might slightly increase kernel boot times (initial estimates NUMBERTAG minutes per core). Minor backward compatibility concerns APITAG whole project has been deleted). Request for Comments Let‚Äôs move Linux forward into the brave world of enterprise‚Ñ¢Ô∏è‚Ñ¢Ô∏è‚Ñ¢Ô∏è grade software. Please provide feedback, but only if it aligns with the principles of Java¬©Ô∏è‚Ñ¢Ô∏è. Constructive criticism will be filed in /dev/null. I will discuss it with my team in the next Agile Sprint Standup Poker!"
1170,Rename to Winux,Add Linus's new changes.,Rename to Winux Add Linus's new changes.
1169,Test,,Test
1168,Update README,"Revision to the Linux Kernel Repository README! This is not all that crazy, just some added ASCII and Markdown. Risks None, This is simply a slight graphical update to the README. To the reviewers: Hello! First big commit like this, sorry if I am missing something important.","Update README Revision to the Linux Kernel Repository README! This is not all that crazy, just some added ASCII and Markdown. Risks None, This is simply a slight graphical update to the README. To the reviewers: Hello! First big commit like this, sorry if I am missing something important."
1167,Update ll_temac_main.c,fix lock description,Update ll_temac_main.c fix lock description
1166,Manual run NUMBERTAG rc5,,Manual run NUMBERTAG rc5
1165,ahci: Add Marvell NUMBERTAG se NUMBERTAG device id,Add device id for Marvell NUMBERTAG se NUMBERTAG Signed off by: Peter Schlaf APITAG,ahci: Add Marvell NUMBERTAG se NUMBERTAG device id Add device id for Marvell NUMBERTAG se NUMBERTAG Signed off by: Peter Schlaf APITAG
1164,Create TODO.md,Note for the future.,Create TODO.md Note for the future.
1161,Update core.c NUMBERTAG,NUMBERTAG,Update core.c NUMBERTAG NUMBERTAG
1155,Update main.c with peace message during boot,"Add peace message to kernel logs This commit adds a simple message to the kernel logs: ""PAX: This is a peaceful software!"" The message appears right after the Linux version banner during boot and serves as a reminder that open source software should promote peace and collaboration. This change does not affect functionality and is purely informational. Signed off by: Hendrik Joachim Rennefeld","Update main.c with peace message during boot Add peace message to kernel logs This commit adds a simple message to the kernel logs: ""PAX: This is a peaceful software!"" The message appears right after the Linux version banner during boot and serves as a reminder that open source software should promote peace and collaboration. This change does not affect functionality and is purely informational. Signed off by: Hendrik Joachim Rennefeld"
1151,Fix multicore arcsync reset,"Since all cores within the cluster share the same reset line, lifting the reset line before the IVT is set for cores other than NUMBERTAG leads to them to be stuck trying to execute at NUMBERTAG This fixes this behavior.","Fix multicore arcsync reset Since all cores within the cluster share the same reset line, lifting the reset line before the IVT is set for cores other than NUMBERTAG leads to them to be stuck trying to execute at NUMBERTAG This fixes this behavior."
1150,made code more efficient,I made the code better and more efficent. Can I be credited in the credits pwease ü•∫ü•∫ü•∫üëâüëâüëâüëàüëàüëà,made code more efficient I made the code better and more efficent. Can I be credited in the credits pwease ü•∫ü•∫ü•∫üëâüëâüëâüëàüëàüëà
1137,misspelling,,misspelling
1131,Update kvm.c,,Update kvm.c
1121,Create c cpp.yml,,Create c cpp.yml
1110,Rust in Peace,"No More Rust in the Kernel After much debate, it‚Äôs become clear that Rust in the kernel is like pineapple on pizza, controversial, divisive, and not everyone agrees it belongs. This merge request boldly takes the step to remove Rust and restore the kernel to its C only glory. What this MR does NUMBERTAG Eradicates Rust code : All Rust files have been sent to APITAG (don‚Äôt worry, I didn‚Äôt cargo them along for the ride). Risks Some developers may cry. Potential spike in segmentation faults. Kernel development team may face existential crises without a memory safe language. Testing Compiled and ran the kernel. Works fine! (At least on my machine.) Randomly poked APITAG to confirm it didn‚Äôt explode.","Rust in Peace No More Rust in the Kernel After much debate, it‚Äôs become clear that Rust in the kernel is like pineapple on pizza, controversial, divisive, and not everyone agrees it belongs. This merge request boldly takes the step to remove Rust and restore the kernel to its C only glory. What this MR does NUMBERTAG Eradicates Rust code : All Rust files have been sent to APITAG (don‚Äôt worry, I didn‚Äôt cargo them along for the ride). Risks Some developers may cry. Potential spike in segmentation faults. Kernel development team may face existential crises without a memory safe language. Testing Compiled and ran the kernel. Works fine! (At least on my machine.) Randomly poked APITAG to confirm it didn‚Äôt explode."
1109,SECURITY.md,[](url) run,SECURITY.md [](url) run
1101,easy way to fix security,,easy way to fix security
1087,An open letter to Linus. also goida z z z svo v v v,goida bratia,An open letter to Linus. also goida z z z svo v v v goida bratia
1075,Update tsacct.c,Optimize acct_update_integrals by replacing local_irq_save with a more fine grained spinlock (tsk >mm >page_table_lock) to reduce locking overhead. This minimizes the time interrupts are disabled while still ensuring the integrity of the accounting data.,Update tsacct.c Optimize acct_update_integrals by replacing local_irq_save with a more fine grained spinlock (tsk >mm >page_table_lock) to reduce locking overhead. This minimizes the time interrupts are disabled while still ensuring the integrity of the accounting data.
1072,Âà†Èô§‰∏çÂ∞äÈáçLGBTÁöÑÂºÄÂèëËÄÖ Remove maintainers who do not respect LGBT people,"ÊçÆÊú¨‰∫∫Ë∞ÉÊü•ÔºåË¢´linus APITAG APITAG According to my own research, among the Russian developers removed by linus torvalds were gays, so I suspect that Linux developers in general hate LGBT. LGBT people are people and we need to respect LGBT people, so I removed all maintainers from the MAINTAINERS file. By. Li lingyi, in Changsha, China","Âà†Èô§‰∏çÂ∞äÈáçLGBTÁöÑÂºÄÂèëËÄÖ Remove maintainers who do not respect LGBT people ÊçÆÊú¨‰∫∫Ë∞ÉÊü•ÔºåË¢´linus APITAG APITAG According to my own research, among the Russian developers removed by linus torvalds were gays, so I suspect that Linux developers in general hate LGBT. LGBT people are people and we need to respect LGBT people, so I removed all maintainers from the MAINTAINERS file. By. Li lingyi, in Changsha, China"
1019,remove MAINTAINERS from countries I don't like,"Hi, it has come to my attention that certain contributors are being removed for being born in the wrong country. IMHO this isn't enough. To achieve true political correctness we should ban contributors from all countries I personally dislike. List of countries to be banned from contributing to the kernel: APITAG List APITAG Egypt Cape Verde Kyrgyzstan Lithuania Maldives Tanzania Myanmar Jamaica Malta Benin Dominican Republic Congo Solomon Islands Cameroon Vanuatu Eritrea New Zealand Ghana Grenada Andorra Colombia Jordan Algeria Bulgaria Thailand Malaysia Uganda Paraguay Finland Bahamas Zambia South Africa Timor Leste Belgium Bahrain Panama RÃ∂uÃ∂sÃ∂sÃ∂iÃ∂a (already banned) Nigeria Haiti Australia United Arab Emirates Barbados Holy See Spain (the best country) Equatorial Guinea Czechia Palau Laos Sweden Gambia Angola Senegal Kiribati Costa Rica Liberia Canada Togo Iraq Yemen Greece Democratic Republic of the Congo Austria Syria Gabon Cyprus Uzbekistan Lebanon Liechtenstein Chad Trinidad and Tobago Marshall Islands Malawi Central African Republic Israel (for... reasons) Madagascar Luxembourg Brazil Romania Mali North Korea Armenia Sudan Botswana Samoa Saudi Arabia Guinea Tonga Rwanda Netherlands Monaco Morocco Turkey Brunei Bhutan Philippines Ecuador Nicaragua Italy Ethiopia Afghanistan Saint Kitts and Nevis India Cambodia Uruguay Qatar Serbia Saint Lucia Libya Pakistan France (please üôèüèª) Djibouti Germany Bangladesh Micronesia Guinea Bissau Kazakhstan Hungary Poland Dominica Sao Tome and Principe South Korea Mauritania Guyana Eswatini Suriname Slovakia Oman Niger Singapore Denmark Belarus Bosnia and Herzegovina Sierra Leone Cuba Ireland C√¥te APITAG Burundi Ukraine Papua New Guinea Mauritius Antigua and Barbuda Saint Vincent and the Grenadines Fiji Portugal Somalia Kuwait Nauru Argentina Latvia Estonia Chile Moldova Turkmenistan Georgia United States of America Nepal El Salvador Venezuela State of Palestine North Macedonia Tunisia Croatia Iceland Japan Slovenia Kenya Lesotho Guatemala Switzerland Tuvalu United Kingdom China (‰Ω†Â•ΩË∞∑Ê≠åÁøªËØë) San Marino Namibia Vietnam Norway Honduras Mozambique Peru Zimbabwe Albania Belize South Sudan Burkina Faso Mongolia Mexico Comoros Azerbaijan Bolivia Iran Tajikistan Montenegro Indonesia Seychelles Sri Lanka /s APITAG","remove MAINTAINERS from countries I don't like Hi, it has come to my attention that certain contributors are being removed for being born in the wrong country. IMHO this isn't enough. To achieve true political correctness we should ban contributors from all countries I personally dislike. List of countries to be banned from contributing to the kernel: APITAG List APITAG Egypt Cape Verde Kyrgyzstan Lithuania Maldives Tanzania Myanmar Jamaica Malta Benin Dominican Republic Congo Solomon Islands Cameroon Vanuatu Eritrea New Zealand Ghana Grenada Andorra Colombia Jordan Algeria Bulgaria Thailand Malaysia Uganda Paraguay Finland Bahamas Zambia South Africa Timor Leste Belgium Bahrain Panama RÃ∂uÃ∂sÃ∂sÃ∂iÃ∂a (already banned) Nigeria Haiti Australia United Arab Emirates Barbados Holy See Spain (the best country) Equatorial Guinea Czechia Palau Laos Sweden Gambia Angola Senegal Kiribati Costa Rica Liberia Canada Togo Iraq Yemen Greece Democratic Republic of the Congo Austria Syria Gabon Cyprus Uzbekistan Lebanon Liechtenstein Chad Trinidad and Tobago Marshall Islands Malawi Central African Republic Israel (for... reasons) Madagascar Luxembourg Brazil Romania Mali North Korea Armenia Sudan Botswana Samoa Saudi Arabia Guinea Tonga Rwanda Netherlands Monaco Morocco Turkey Brunei Bhutan Philippines Ecuador Nicaragua Italy Ethiopia Afghanistan Saint Kitts and Nevis India Cambodia Uruguay Qatar Serbia Saint Lucia Libya Pakistan France (please üôèüèª) Djibouti Germany Bangladesh Micronesia Guinea Bissau Kazakhstan Hungary Poland Dominica Sao Tome and Principe South Korea Mauritania Guyana Eswatini Suriname Slovakia Oman Niger Singapore Denmark Belarus Bosnia and Herzegovina Sierra Leone Cuba Ireland C√¥te APITAG Burundi Ukraine Papua New Guinea Mauritius Antigua and Barbuda Saint Vincent and the Grenadines Fiji Portugal Somalia Kuwait Nauru Argentina Latvia Estonia Chile Moldova Turkmenistan Georgia United States of America Nepal El Salvador Venezuela State of Palestine North Macedonia Tunisia Croatia Iceland Japan Slovenia Kenya Lesotho Guatemala Switzerland Tuvalu United Kingdom China (‰Ω†Â•ΩË∞∑Ê≠åÁøªËØë) San Marino Namibia Vietnam Norway Honduras Mozambique Peru Zimbabwe Albania Belize South Sudan Burkina Faso Mongolia Mexico Comoros Azerbaijan Bolivia Iran Tajikistan Montenegro Indonesia Seychelles Sri Lanka /s APITAG"
978,Create CODE_OF_CONDUCT.md,,Create CODE_OF_CONDUCT.md
956,PATHTAG,‚Ä¶fffffffffffffffd APITAG \h'jgggggggggghglf \\ \d'f Sticky keys have been disabled,PATHTAG ‚Ä¶fffffffffffffffd APITAG \h'jgggggggggghglf \\ \d'f Sticky keys have been disabled
840,Replace panic.c with ASCII Art images of Benjamin Netanyahu,image URLTAG And Palestine(and the world) will never have panic,Replace panic.c with ASCII Art images of Benjamin Netanyahu image URLTAG And Palestine(and the world) will never have panic
838,"README: Fix grammatical & punctuation errors, markdown ify, clickable‚Ä¶","‚Ä¶ URLs, improved reading clarity Fixed grammatical errors: ""which ... by upgrading"" > which ... from upgrading"" Fixed punctuation (incorrectly added comma): ""building and, running"" > ""building and running"" Improved reading clarity: ""In a number of formats"" > ""In several formats"" ""In order to build the"" > ""To build the"" ""several of them using"" > ""several using"" Updated file to markdown, while maintaining past formatting Links are now hyperlinks, facilitating use","README: Fix grammatical & punctuation errors, markdown ify, clickable‚Ä¶ ‚Ä¶ URLs, improved reading clarity Fixed grammatical errors: ""which ... by upgrading"" > which ... from upgrading"" Fixed punctuation (incorrectly added comma): ""building and, running"" > ""building and running"" Improved reading clarity: ""In a number of formats"" > ""In several formats"" ""In order to build the"" > ""To build the"" ""several of them using"" > ""several using"" Updated file to markdown, while maintaining past formatting Links are now hyperlinks, facilitating use"
835,actions/upload artifact,comit,actions/upload artifact comit
833,chinese john cena,chinese john cena,chinese john cena chinese john cena
727,created pizza,,created pizza
684,Update panic.c,,Update panic.c
476,Hyy there,Do you still have a mipad ???? If yes please help us We cannot make shield tablet blobs stable on mipad We need bootloader sources please help Sorry for writing here,Hyy there Do you still have a mipad ???? If yes please help us We cannot make shield tablet blobs stable on mipad We need bootloader sources please help Sorry for writing here
437,this code very fast,remove empty characters,this code very fast remove empty characters
128,Eliminate two duplicated lines codes to enhance the xt_hashlimit.c of ne...,There are two duplicated lines of hashlimit_mt. Now I enhance it to eliminate the duplicated codes.,Eliminate two duplicated lines codes to enhance the xt_hashlimit.c of ne... There are two duplicated lines of hashlimit_mt. Now I enhance it to eliminate the duplicated codes.
125,Update cfi_cmdset NUMBERTAG c,"Issue description: During writing the Linux Kernel image on APITAG device the burning is failed due to I/O write or erase error: Erasing blocks NUMBERTAG While erasing blocks NUMBERTAG a NUMBERTAG c NUMBERTAG on /dev/mtd1: Input/output error Burning the /persistent/ISF.img image on /dev/mtd1 failed. When doing erase, writing or verifying using FLASHCP program, the cfi mtd functions of Linux Kernel MTD driver can returns too early. The function APITAG return OK status while the actual writing or erasing is not finished on NOR flash device. It leads to I/O error and fail in writing, erasing or verifying of the data during working with MTD devices. When the issue with writing is reproduced we compared the data of APITAG and the data which was written on the APITAG device: dd PATHTAG bs NUMBERTAG count NUMBERTAG persistent/dest.buf hexdump /persistent/dest.buf > /persistent/dest.hex hexdump APITAG > /persistent/source.hex diff APITAG /persistent/dest.hex /persistent/source.hex And it was observed that the driver didn't write some blocks at all NUMBERTAG ffff instead of real data in some places). Flash driver skip writing or hasn't been finished it during the specific time. I found that in Internet I am not alone in this world, but I didn't find some solution for this problem which doesn't lead to increasing of the time of writing. So I investigate the writing and found that there is no any check that the data is really was written on the Flash. So the proposed solution is to compare the given last byte with written one. We have run a long stubility during several weeks on our side with Switch Board using writing on NOR flash and the problem is not reproduced. FREQUENCY NUMBERTAG The I/O error appears about NUMBERTAG time during NUMBERTAG hours writing on NOR flash. But it was not possible to determine exactly at what time the issue can happen. SYSTEM IMPACT: fails to write/erase on NOR flash FIX DESCRIPTION: Wait until the following checks return positive results during writing/erasing on NOR Flash NUMBERTAG read the data/status from the device (checking status of the NOR Flash: busy, timeout or ok(data)) return ok NUMBERTAG check the last byte of given buffer data is written in case of WRITE or the last map word is erased in case of ERASE. TEST DESCRIPTION: Start writing some data on NOR FLASH (mtd device) using flashcp or start erasing using flash_erase.","Update cfi_cmdset NUMBERTAG c Issue description: During writing the Linux Kernel image on APITAG device the burning is failed due to I/O write or erase error: Erasing blocks NUMBERTAG While erasing blocks NUMBERTAG a NUMBERTAG c NUMBERTAG on /dev/mtd1: Input/output error Burning the /persistent/ISF.img image on /dev/mtd1 failed. When doing erase, writing or verifying using FLASHCP program, the cfi mtd functions of Linux Kernel MTD driver can returns too early. The function APITAG return OK status while the actual writing or erasing is not finished on NOR flash device. It leads to I/O error and fail in writing, erasing or verifying of the data during working with MTD devices. When the issue with writing is reproduced we compared the data of APITAG and the data which was written on the APITAG device: dd PATHTAG bs NUMBERTAG count NUMBERTAG persistent/dest.buf hexdump /persistent/dest.buf > /persistent/dest.hex hexdump APITAG > /persistent/source.hex diff APITAG /persistent/dest.hex /persistent/source.hex And it was observed that the driver didn't write some blocks at all NUMBERTAG ffff instead of real data in some places). Flash driver skip writing or hasn't been finished it during the specific time. I found that in Internet I am not alone in this world, but I didn't find some solution for this problem which doesn't lead to increasing of the time of writing. So I investigate the writing and found that there is no any check that the data is really was written on the Flash. So the proposed solution is to compare the given last byte with written one. We have run a long stubility during several weeks on our side with Switch Board using writing on NOR flash and the problem is not reproduced. FREQUENCY NUMBERTAG The I/O error appears about NUMBERTAG time during NUMBERTAG hours writing on NOR flash. But it was not possible to determine exactly at what time the issue can happen. SYSTEM IMPACT: fails to write/erase on NOR flash FIX DESCRIPTION: Wait until the following checks return positive results during writing/erasing on NOR Flash NUMBERTAG read the data/status from the device (checking status of the NOR Flash: busy, timeout or ok(data)) return ok NUMBERTAG check the last byte of given buffer data is written in case of WRITE or the last map word is erased in case of ERASE. TEST DESCRIPTION: Start writing some data on NOR FLASH (mtd device) using flashcp or start erasing using flash_erase."
84,ALSA: Missing ;,Fixes: RT Linux Hdaudio NUMBERTAG won't compile because of missing ;,ALSA: Missing ; Fixes: RT Linux Hdaudio NUMBERTAG won't compile because of missing ;
83,Merge pull request NUMBERTAG from torvalds/master,Pull request at NUMBERTAG,Merge pull request NUMBERTAG from torvalds/master Pull request at NUMBERTAG
81,facebook functionality,allows users to login to linux with facebook,facebook functionality allows users to login to linux with facebook
78,supercharged some functions,supercharged some boring ass function,supercharged some functions supercharged some boring ass function
62,update to gnu3,,update to gnu3
60,fix some typos,,fix some typos
31,Fix M NUMBERTAG netbook touchpad,Added support for Gigabyte M NUMBERTAG touchpad,Fix M NUMBERTAG netbook touchpad Added support for Gigabyte M NUMBERTAG touchpad
20,s,sup,s sup
17,Add support for AR5BBU NUMBERTAG e NUMBERTAG c],,Add support for AR5BBU NUMBERTAG e NUMBERTAG c]
